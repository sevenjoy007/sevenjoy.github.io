[{"body":"","link":"https://sevenjoy007.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://sevenjoy007.github.io/tags/blog/","section":"tags","tags":null,"title":"blog"},{"body":"","link":"https://sevenjoy007.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://sevenjoy007.github.io/post/","section":"post","tags":null,"title":"Posts"},{"body":"","link":"https://sevenjoy007.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://sevenjoy007.github.io/categories/technology/","section":"categories","tags":null,"title":"Technology"},{"body":"","link":"https://sevenjoy007.github.io/tags/tools/","section":"tags","tags":null,"title":"tools"},{"body":"个人博客的搭建 前言 目前网上有很多现有的博客平台，如知乎、掘金、csdn、segmentfault、简书、博客园等等，可以直接在这些平台上发表自己的博客。优点是可以专注内容本身，缺点是页面格式受限于平台本身而且会受其广告/通知干扰。\n这里专指搭建个人的博客平台，记录下我的博客搭建过程。\n下面先介绍一个关于网站搭建的基本概念\n静态和动态网站 静态网站 每个页面都是建站者发送到服务器的一个html文件，每次增删改都要对服务器文件进行一次下载上传。\n动态网站 浏览器请求某个页面时，服务器根据当时时间、参数等动态生成html页面，再发给浏览器。\n搭建个人网站选项 静态网站生成技术\n如JekyII、Hugo、Hexo等，结合Github pages，就能免费完成个人网站的搭建\n内容管理系统CMS\n需要有自己的服务器跟域名，可以用于搭建企业级网站。如WordPress、Halo等。\n综上，因为不想花钱🙃，加上只是搭个博客记录内容非规模性网站，故选择前者。\n静态网站生成框架 Hexo 网站：hexo.io\nnode.js编写，中文友好，有很多主题。\n教程：手把手教你从零开始搭建个人博客，20 分钟上手 - 掘金\nhugo 网站：gohugo.io\ngo语言编写的，编译速度快\n因为对go比较熟悉，所以还是决定用hugo\n用hugo+githubPages搭建个人博客 1. 安装hugo 1brew install hugo 2hugo version // 检验是否安装成功 2. 创建博客 1hugo new site myblog 创建的博客项目为myblog，目录结构如下:\n1├── archetypes 2│ └── default.md 3├── config.toml # 博客站点的配置文件 4├── content # 博客文章所在目录 5├── data 6├── layouts # 网站布局 7├── static # 一些静态内容 8└── themes # 博客主题 3. 使用博客主题 挑选主题：themes.gohugo.io，我选的是Clarity | Hugo Themes\n1cd ../themes 2git clone git@github.com:chipzoller/hugo-clarity.git 3tree hugo-clarity 下载主题内容如下\n1hugo-clarity 2├── CODE_OF_CONDUCT.md 3├── CONTRIBUTING.md 4├── LICENSE.md 5├── README.md 6├── archetypes 7├── assets 8├── exampleSite # 本主题实例内容 9│ ├── LICENSE 10│ ├── README.md 11│ ├── archetypes 12│ ├── config 13│ ├── content # 示例博客文章 14│ ├── layouts 15│ ├── resources 16│ └── static 17├── i18n 18├── images 19├── layouts 20├── resources 21├── static 22└── theme.toml 使用主题：复制到根目录\n1cp themes/hugo-clarity/exampleSite/* ./ -r 4. 启动博客服务 1hugo server 可以看到服务默认会在占用1313 端口，在浏览器中访问http://localhost:1313/ 地址，预期那种应该可以看到跟hugo官网演示的页面\n","link":"https://sevenjoy007.github.io/post/create_blog/","section":"post","tags":["tools","blog"],"title":"个人博客的搭建"},{"body":"","link":"https://sevenjoy007.github.io/archives/","section":"","tags":null,"title":""},{"body":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","link":"https://sevenjoy007.github.io/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://sevenjoy007.github.io/series/","section":"series","tags":null,"title":"Series"}]